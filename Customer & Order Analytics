#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 


#1. How many orders were placed in January? 

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone? 

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 

SELECT distinct customers.acctnum
FROM BIT_DB.customers
INNER JOIN  BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE length(order_id) = 6 AND 
order_id <> 'Order_ID';

#4. Which product was the cheapest one sold in January, and what was the price? 

SELECT distinct product, MIN(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC LIMIT 1;

#5. What is the total revenue for each product sold in January?

SELECT sum(quantity)*price as revenue, product
FROM BIT_DB.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT
sum(Quantity),product, sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT count(distinct customers.acctnum), avg(FebSales.Quantity * FebSales.price)
FROM BIT_DB.FebSales 
LEFT JOIN BIT_DB.customers
ON Febsales.orderID = customers.order_id
WHERE FebSales.Quantity > 2 AND
length(FebSales.orderID)= 6 AND
FebSales.orderID <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product,SUM(Quantity)
FROM FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;



